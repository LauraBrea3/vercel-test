//example code of Nick showing us how to get all the pokemons from the server

const axios = require('axios')
const Pokemon = require('../models/pokemon')
const { performance } = require('perf_hooks');

const BASE_URL = 'https://pokeapi.co/api/v2'

const getPokemonById = async (req, res) => {
    try {
        const { id } = req.params
        const url = `${BASE_URL}/pokemon/${id}`
        const { data } = await axios.get(url)
        res.json(data)
    } catch (error) {
        console.log(error)
        res.status(400).json({ message: 'error retrieving pokemon' })
    }
}
const processPokemon = async (req, res) => {
    const startTime = performance.now()
    await Pokemon.deleteMany()
    
    let url = `${BASE_URL}/pokemon`
    let pokemonToProcess = true
    let numberOfPocessedPokemon = 0
    while (pokemonToProcess) {
        const { data } = await axios.get(url)
        const promises = data.results.map(res => res.url).map(fetchURL)
        const resolvedData = await Promise.all(promises)
        numberOfPocessedPokemon += resolvedData.length
        console.log('total pokemon processed:', numberOfPocessedPokemon)
        if (data.next) {
            url = data.next
        } else {
            pokemonToProcess = false
            console.log('complete')
        }
    }
    const endTime = performance.now()
    const completeTime = endTime - startTime
    res.send(`completed in ${completeTime}`)
}

const fetchURL = async (url) => {
    const { data } = await axios.get(url)
    
    await new Pokemon({
        pokemonId: data.id,
        name: data.name,
        image: data.sprites.frontDefault
    }).save()
 }

module.exports = {
    getPokemonById,
    processPokemon
}


//Object Oriented Programming (OOP)
class Person {
    constructor(name,age,location){
        this.name = name
        this.age = age
        this.location = location
    }
    greeting() {
        console.log(`hello my name is ${this.name}`)
    }
}

const laura = new Person('laura', 32, 'new york')
laura.greeting()


